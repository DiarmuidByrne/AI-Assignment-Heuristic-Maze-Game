/*
	Example: A tip calculation FIS (fuzzy inference system)
	Calculates tip based on 'servie' and 'food'

	If you want to about this example (and fuzzy logic), please 
	read Matlab's tutorial on fuzzy logic toolbox 
	http://www.mathworks.com/access/helpdesk/help/pdf_doc/fuzzy/fuzzy.pdf

									Pablo Cingolani 
									pcingola@users.sourceforge.net
*/

FUNCTION_BLOCK fightEvaluator

VAR_INPUT			
	enemy_strength : REAL;
	weapon_durability : REAL;
END_VAR

VAR_OUTPUT			
	damage_taken : REAL;
END_VAR

FUZZIFY weapon_durability
	TERM broken := (0, 1) (1, 0); 
	TERM poor := (1, 0) (2, 1) (3, 0);
	TERM good := (3, 0) (5,1) (6,1) (8, 0);
	TERM legendary := (7, 0) (9, 1);
END_FUZZIFY

FUZZIFY enemy_strength
	TERM average := (0,1) (5,1) (6, 0);
	TERM strong := (6, 0) (9, 1);
END_FUZZIFY

DEFUZZIFY damage_taken		
	TERM low := (0,0) (5,1) (10,0);
	TERM average := (10,0) (15,1) (20,0);
	TERM high := (20,0) (25,1) (30,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF weapon_durability IS broken OR enemy_strength IS strong THEN damage_taken IS high;
	RULE 2 : IF enemy_strength IS average THEN damage_taken IS average; 
	RULE 3 : IF weapon_durability IS legendary THEN damage_taken IS low;
	RULE 4 : IF enemy_strength IS average AND weapon_durability IS NOT broken THEN damage_taken IS low;
END_RULEBLOCK

END_FUNCTION_BLOCK
